spring.data.mongodb.authentication_database=admin
spring.data.mongodb.username=root
spring.data.mongodb.database=antecedent_db
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017

# App Properties
Antecedent.app.jwtExpirationMs= 14400000

Antecedent.app.bufferSize = 8192
Antecedent.app.wordprocessor=http://awawp:8000/


# Servlet upload properties
spring.servlet.multipart.max_file_size=256MB
spring.servlet.multipart.max_request_size=256MB
spring.servlet.multipart.enabled=true



spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#google custom search config
Antecedent.app.key=AIzaSyA8k7la4Wm2NmkQ0gpCWf4WQd0U_EOKkgU
Antecedent.app.cx=d1f016638ca091f0b

#Redmine configs
Antecedent.app.REDMINE_URL = https://support.antecedentwriting.com
Antecedent.app.REDMINE_API_KEY = ef7d4a3470672cac8a3d43962058b2aec83c4b0a

#Error handling
server.error.include_message=always


# GitHub Login
spring.security.oauth2.client.registration.github.client-id=ClientID
spring.security.oauth2.client.registration.github.client-secret=ClientSecret
spring.security.oauth2.client.registration.github.scope=user:email, read:user
spring.security.oauth2.client.registration.github.redirect-uri: https://dev.aw.libretexts.org/login/oauth2/code/github
# spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code

# Google Login
spring.security.oauth2.client.registration.google.client-id=ClientID
spring.security.oauth2.client.registration.google.client-secret=ClientSecret
spring.security.oauth2.client.registration.google.scope=email, profile
spring.security.oauth2.client.registration.google.redirect-uri: https://dev.aw.libretexts.org/login/oauth2/code/google-callback
# spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code



# cas
spring.security.oauth2.client.registration.cas.client-id=ClientID
spring.security.oauth2.client.registration.cas.client-secret=ClientSecret
spring.security.oauth2.client.registration.cas.scope= openid, profile, email, libretexts
spring.security.oauth2.client.registration.cas.authorization-grant-type= authorization_code
spring.security.oauth2.client.registration.cas.redirect-uri= https://dev.aw.libretexts.org/login/oauth2/code/cas
spring.security.oauth2.client.registration.cas.client-name= cas
spring.security.oauth2.client.provider.cas.issuer-uri= https://castest2.libretexts.org/cas/oidc
spring.security.oauth2.client.provider.cas.user-info-uri= https://castest2.libretexts.org/cas/oidc/profile
spring.security.oauth2.client.provider.cas.token-uri=https://castest2.libretexts.org/cas/oidc/accessToken
spring.security.oauth2.client.provider.cas.authorization-uri=https://castest2.libretexts.org/cas/oidc/authorize
spring.security.oauth2.client.provider.cas.jwk-set-uri=https://castest2.libretexts.org/cas/oidc/jwks



antecedent.oauth2.authorizedRedirectUris:https://dev.aw.libretexts.org/oauth2/redirect


Antecedent.app.DEFAULT_TIMEZONE = America/Toronto

Antecedent.app.DEMO_STUDENTS = 664236a09879f84e60834a67,664237119879f84e60834a68,6642379f9879f84e60834a69

Antecedent.app.DEMO_SUBMISSION = 6644ddd38ffdca370401a547,6644dde18ffdca370401a841,6644dde38ffdca370401acb8,6644dde28ffdca370401a9be,6644dde38ffdca370401ab3b,6644dddc8ffdca370401a6c4